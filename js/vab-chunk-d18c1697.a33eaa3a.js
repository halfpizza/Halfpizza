/*!
 *  build: admin-pro 
 *  copyright: chuzhixin 1204505056@qq.com 
 *  time: 2021-8-12 23:21:55
 */
(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["vab-chunk-d18c1697"],{"0034":function(e){e.exports=JSON.parse('{"name":"muirGlacier","comment":"HF to delay the difficulty bomb","url":"https://eips.ethereum.org/EIPS/eip-2384","status":"Final","gasConfig":{},"gasPrices":{},"vm":{},"pow":{"difficultyBombDelay":{"v":9000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}')},"0b1e":function(e){e.exports=JSON.parse('{"name":"EIP-3541","comment":"Reject new contracts starting with the 0xEF byte","url":"https://eips.ethereum.org/EIPS/eip-3541","status":"Draft","minimumHardfork":"berlin","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}')},"0dc4":function(e){e.exports=JSON.parse('{"name":"ropsten","chainId":3,"networkId":3,"defaultHardfork":"istanbul","consensus":{"type":"pow","algorithm":"ethash","ethash":{}},"comment":"PoW test network","url":"https://github.com/ethereum/ropsten","genesis":{"hash":"0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d","timestamp":null,"gasLimit":16777216,"difficulty":1048576,"nonce":"0x0000000000000042","extraData":"0x3535353535353535353535353535353535353535353535353535353535353535","stateRoot":"0x217b0bbcfb72e2d57e28f33cb361b9983513177755dc3f33ce3e7022ed62b77b"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x30c7ddbc"},{"name":"homestead","block":0,"forkHash":"0x30c7ddbc"},{"name":"dao","block":null,"forkHash":null},{"name":"tangerineWhistle","block":0,"forkHash":"0x30c7ddbc"},{"name":"spuriousDragon","block":10,"forkHash":"0x63760190"},{"name":"byzantium","block":1700000,"forkHash":"0x3ea159c7"},{"name":"constantinople","block":4230000,"forkHash":"0x97b544f3"},{"name":"petersburg","block":4939394,"forkHash":"0xd6e2149b"},{"name":"istanbul","block":6485846,"forkHash":"0x4bc66396"},{"name":"muirGlacier","block":7117117,"forkHash":"0x6727ef90"},{"name":"berlin","block":9812189,"forkHash":"0xa157d377"},{"name":"london","block":10499401,"forkHash":"0x7119b6b3"}],"bootstrapNodes":[{"ip":"52.176.7.10","port":30303,"id":"30b7ab30a01c124a6cceca36863ece12c4f5fa68e3ba9b0b51407ccc002eeed3b3102d20a88f1c1d3c3154e2449317b8ef95090e77b312d5cc39354f86d5d606","location":"","comment":"US-Azure geth"},{"ip":"52.176.100.77","port":30303,"id":"865a63255b3bb68023b6bffd5095118fcc13e79dcf014fe4e47e065c350c7cc72af2e53eff895f11ba1bbb6a2b33271c1116ee870f266618eadfc2e78aa7349c","location":"","comment":"US-Azure parity"},{"ip":"52.232.243.152","port":30303,"id":"6332792c4a00e3e4ee0926ed89e0d27ef985424d97b6a45bf0f23e51f0dcb5e66b875777506458aea7af6f9e4ffb69f43f3778ee73c81ed9d34c51c4b16b0b0f","location":"","comment":"Parity"},{"ip":"192.81.208.223","port":30303,"id":"94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09","location":"","comment":"@gpip"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.ropsten.ethdisco.net"]}')},1355:function(e,t,o){"use strict";(function(e){var r=this&&this.__extends||function(){var e=function(t,o){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])},e(t,o)};return function(t,o){function r(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),a=this&&this.__assign||function(){return a=Object.assign||function(e){for(var t,o=1,r=arguments.length;o<r;o++)for(var a in t=arguments[o],t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},a.apply(this,arguments)},n=this&&this.__read||function(e,t){var o="function"===typeof Symbol&&e[Symbol.iterator];if(!o)return e;var r,a,n=o.call(e),i=[];try{while((void 0===t||t-- >0)&&!(r=n.next()).done)i.push(r.value)}catch(s){a={error:s}}finally{try{r&&!r.done&&(o=n["return"])&&o.call(n)}finally{if(a)throw a.error}}return i};Object.defineProperty(t,"__esModule",{value:!0});var i=o("5b66"),s=o("4b262"),c=o("6f3d"),d=o("be6a"),f=1,u=e.from(f.toString(16).padStart(2,"0"),"hex"),l=function(t){function o(e,o){var r,n;void 0===o&&(o={});var s=t.call(this,a(a({},e),{type:f}))||this;s.DEFAULT_HARDFORK="berlin";var u=e.chainId,l=e.accessList,h=e.gasPrice;if(s.common=s._getCommon(o.common,u),s.chainId=s.common.chainIdBN(),!s.common.isActivatedEIP(2930))throw new Error("EIP-2930 not enabled on Common");s.activeCapabilities=s.activeCapabilities.concat([2718,2930]);var p=d.AccessLists.getAccessListData(null!==l&&void 0!==l?l:[]);if(s.accessList=p.accessList,s.AccessListJSON=p.AccessListJSON,d.AccessLists.verifyAccessList(s.accessList),s.gasPrice=new i.BN(i.toBuffer(""===h?"0x":h)),s._validateCannotExceedMaxInteger({gasPrice:s.gasPrice}),s.v&&!s.v.eqn(0)&&!s.v.eqn(1))throw new Error("The y-parity of the transaction should either be 0 or 1");if(s.common.gteHardfork("homestead")&&(null===(r=s.s)||void 0===r?void 0:r.gt(c.N_DIV_2)))throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");var m=null===(n=null===o||void 0===o?void 0:o.freeze)||void 0===n||n;return m&&Object.freeze(s),s}return r(o,t),Object.defineProperty(o.prototype,"senderR",{get:function(){return this.r},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"senderS",{get:function(){return this.s},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"yParity",{get:function(){return this.v},enumerable:!1,configurable:!0}),o.fromTxData=function(e,t){return void 0===t&&(t={}),new o(e,t)},o.fromSerializedTx=function(e,t){if(void 0===t&&(t={}),!e.slice(0,1).equals(u))throw new Error("Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: "+f+", received: "+e.slice(0,1).toString("hex"));var r=i.rlp.decode(e.slice(1));if(!Array.isArray(r))throw new Error("Invalid serialized tx input: must be array");return o.fromValuesArray(r,t)},o.fromRlpSerializedTx=function(e,t){return void 0===t&&(t={}),o.fromSerializedTx(e,t)},o.fromValuesArray=function(e,t){if(void 0===t&&(t={}),8!==e.length&&11!==e.length)throw new Error("Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).");var r=n(e,11),a=r[0],s=r[1],c=r[2],d=r[3],f=r[4],u=r[5],l=r[6],h=r[7],p=r[8],m=r[9],b=r[10],v=[];return new o({chainId:new i.BN(a),nonce:s,gasPrice:c,gasLimit:d,to:f,value:u,data:l,accessList:null!==h&&void 0!==h?h:v,v:void 0!==p?new i.BN(p):void 0,r:m,s:b},t)},o.prototype.getDataFee=function(){var e=t.prototype.getDataFee.call(this);return e.iaddn(d.AccessLists.getDataFeeEIP2930(this.accessList,this.common)),e},o.prototype.getUpfrontCost=function(){return this.gasLimit.mul(this.gasPrice).add(this.value)},o.prototype.raw=function(){return[i.bnToUnpaddedBuffer(this.chainId),i.bnToUnpaddedBuffer(this.nonce),i.bnToUnpaddedBuffer(this.gasPrice),i.bnToUnpaddedBuffer(this.gasLimit),void 0!==this.to?this.to.buf:e.from([]),i.bnToUnpaddedBuffer(this.value),this.data,this.accessList,void 0!==this.v?i.bnToUnpaddedBuffer(this.v):e.from([]),void 0!==this.r?i.bnToUnpaddedBuffer(this.r):e.from([]),void 0!==this.s?i.bnToUnpaddedBuffer(this.s):e.from([])]},o.prototype.serialize=function(){var t=this.raw();return e.concat([u,i.rlp.encode(t)])},o.prototype.getMessageToSign=function(t){void 0===t&&(t=!0);var o=this.raw().slice(0,8),r=e.concat([u,i.rlp.encode(o)]);return t?i.keccak256(r):r},o.prototype.hash=function(){if(!this.isSigned())throw new Error("Cannot call hash method if transaction is not signed");return i.keccak256(this.serialize())},o.prototype.getMessageToVerifySignature=function(){return this.getMessageToSign()},o.prototype.getSenderPublicKey=function(){var e;if(!this.isSigned())throw new Error("Cannot call this method if transaction is not signed");var t=this.getMessageToVerifySignature();if(this.common.gteHardfork("homestead")&&(null===(e=this.s)||void 0===e?void 0:e.gt(c.N_DIV_2)))throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");var o=this,r=o.yParity,a=o.r,n=o.s;try{return i.ecrecover(t,r.addn(27),i.bnToUnpaddedBuffer(a),i.bnToUnpaddedBuffer(n))}catch(s){throw new Error("Invalid Signature")}},o.prototype._processSignature=function(e,t,r){var a={common:this.common};return o.fromTxData({chainId:this.chainId,nonce:this.nonce,gasPrice:this.gasPrice,gasLimit:this.gasLimit,to:this.to,value:this.value,data:this.data,accessList:this.accessList,v:new i.BN(e-27),r:new i.BN(t),s:new i.BN(r)},a)},o.prototype.toJSON=function(){var e=d.AccessLists.getAccessListJSON(this.accessList);return{chainId:i.bnToHex(this.chainId),nonce:i.bnToHex(this.nonce),gasPrice:i.bnToHex(this.gasPrice),gasLimit:i.bnToHex(this.gasLimit),to:void 0!==this.to?this.to.toString():void 0,value:i.bnToHex(this.value),data:"0x"+this.data.toString("hex"),accessList:e,v:void 0!==this.v?i.bnToHex(this.v):void 0,r:void 0!==this.r?i.bnToHex(this.r):void 0,s:void 0!==this.s?i.bnToHex(this.s):void 0}},o}(s.BaseTransaction);t.default=l}).call(this,o("b639").Buffer)},2469:function(e){e.exports=JSON.parse('{"name":"EIP-3198","number":3198,"comment":"BASEFEE opcode","url":"https://eips.ethereum.org/EIPS/eip-3198","status":"Review","minimumHardfork":"london","gasConfig":{},"gasPrices":{"basefee":{"v":2,"d":"Gas cost of the BASEFEE opcode"}},"vm":{},"pow":{}}')},"24b7":function(e,t,o){"use strict";(function(e){var r=this&&this.__extends||function(){var e=function(t,o){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])},e(t,o)};return function(t,o){function r(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),a=this&&this.__assign||function(){return a=Object.assign||function(e){for(var t,o=1,r=arguments.length;o<r;o++)for(var a in t=arguments[o],t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},a.apply(this,arguments)},n=this&&this.__read||function(e,t){var o="function"===typeof Symbol&&e[Symbol.iterator];if(!o)return e;var r,a,n=o.call(e),i=[];try{while((void 0===t||t-- >0)&&!(r=n.next()).done)i.push(r.value)}catch(s){a={error:s}}finally{try{r&&!r.done&&(o=n["return"])&&o.call(n)}finally{if(a)throw a.error}}return i};Object.defineProperty(t,"__esModule",{value:!0});var i=o("5b66"),s=o("6f3d"),c=o("4b262"),d=0,f=function(t){function o(e,o){var r;void 0===o&&(o={});var n=t.call(this,a(a({},e),{type:d}))||this;if(n.common=n._validateTxV(n.v,o.common),n.gasPrice=new i.BN(i.toBuffer(""===e.gasPrice?"0x":e.gasPrice)),n._validateCannotExceedMaxInteger({gasPrice:n.gasPrice}),n.common.gteHardfork("spuriousDragon"))if(n.isSigned()){var c=n.v,f=n.common.chainIdBN().muln(2);(c.eq(f.addn(35))||c.eq(f.addn(36)))&&n.activeCapabilities.push(s.Capability.EIP155ReplayProtection)}else n.activeCapabilities.push(s.Capability.EIP155ReplayProtection);var u=null===(r=null===o||void 0===o?void 0:o.freeze)||void 0===r||r;return u&&Object.freeze(n),n}return r(o,t),o.fromTxData=function(e,t){return void 0===t&&(t={}),new o(e,t)},o.fromSerializedTx=function(e,t){void 0===t&&(t={});var o=i.rlp.decode(e);if(!Array.isArray(o))throw new Error("Invalid serialized tx input. Must be array");return this.fromValuesArray(o,t)},o.fromRlpSerializedTx=function(e,t){return void 0===t&&(t={}),o.fromSerializedTx(e,t)},o.fromValuesArray=function(e,t){if(void 0===t&&(t={}),6!==e.length&&9!==e.length)throw new Error("Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).");var r=n(e,9),a=r[0],i=r[1],s=r[2],c=r[3],d=r[4],f=r[5],u=r[6],l=r[7],h=r[8];return new o({nonce:a,gasPrice:i,gasLimit:s,to:c,value:d,data:f,v:u,r:l,s:h},t)},o.prototype.raw=function(){return[i.bnToUnpaddedBuffer(this.nonce),i.bnToUnpaddedBuffer(this.gasPrice),i.bnToUnpaddedBuffer(this.gasLimit),void 0!==this.to?this.to.buf:e.from([]),i.bnToUnpaddedBuffer(this.value),this.data,void 0!==this.v?i.bnToUnpaddedBuffer(this.v):e.from([]),void 0!==this.r?i.bnToUnpaddedBuffer(this.r):e.from([]),void 0!==this.s?i.bnToUnpaddedBuffer(this.s):e.from([])]},o.prototype.serialize=function(){return i.rlp.encode(this.raw())},o.prototype._getMessageToSign=function(){var t=[i.bnToUnpaddedBuffer(this.nonce),i.bnToUnpaddedBuffer(this.gasPrice),i.bnToUnpaddedBuffer(this.gasLimit),void 0!==this.to?this.to.buf:e.from([]),i.bnToUnpaddedBuffer(this.value),this.data];return this.supports(s.Capability.EIP155ReplayProtection)&&(t.push(i.toBuffer(this.common.chainIdBN())),t.push(i.unpadBuffer(i.toBuffer(0))),t.push(i.unpadBuffer(i.toBuffer(0)))),t},o.prototype.getMessageToSign=function(e){void 0===e&&(e=!0);var t=this._getMessageToSign();return e?i.rlphash(t):t},o.prototype.getUpfrontCost=function(){return this.gasLimit.mul(this.gasPrice).add(this.value)},o.prototype.hash=function(){return i.rlphash(this.raw())},o.prototype.getMessageToVerifySignature=function(){if(!this.isSigned())throw Error("This transaction is not signed");var e=this._getMessageToSign();return i.rlphash(e)},o.prototype.getSenderPublicKey=function(){var e,t=this.getMessageToVerifySignature();if(this.common.gteHardfork("homestead")&&(null===(e=this.s)||void 0===e?void 0:e.gt(s.N_DIV_2)))throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");var o=this,r=o.v,a=o.r,n=o.s;try{return i.ecrecover(t,r,i.bnToUnpaddedBuffer(a),i.bnToUnpaddedBuffer(n),this.supports(s.Capability.EIP155ReplayProtection)?this.common.chainIdBN():void 0)}catch(c){throw new Error("Invalid Signature")}},o.prototype._processSignature=function(e,t,r){var a=new i.BN(e);this.supports(s.Capability.EIP155ReplayProtection)&&a.iadd(this.common.chainIdBN().muln(2).addn(8));var n={common:this.common};return o.fromTxData({nonce:this.nonce,gasPrice:this.gasPrice,gasLimit:this.gasLimit,to:this.to,value:this.value,data:this.data,v:a,r:new i.BN(t),s:new i.BN(r)},n)},o.prototype.toJSON=function(){return{nonce:i.bnToHex(this.nonce),gasPrice:i.bnToHex(this.gasPrice),gasLimit:i.bnToHex(this.gasLimit),to:void 0!==this.to?this.to.toString():void 0,value:i.bnToHex(this.value),data:"0x"+this.data.toString("hex"),v:void 0!==this.v?i.bnToHex(this.v):void 0,r:void 0!==this.r?i.bnToHex(this.r):void 0,s:void 0!==this.s?i.bnToHex(this.s):void 0}},o.prototype._validateTxV=function(e,t){var o;if(void 0!==e&&!e.eqn(0)&&(!t||t.gteHardfork("spuriousDragon"))&&!e.eqn(27)&&!e.eqn(28))if(t){var r=t.chainIdBN().muln(2),a=e.eq(r.addn(35))||e.eq(r.addn(36));if(!a)throw new Error("Incompatible EIP155-based V "+e.toString()+" and chain id "+t.chainIdBN().toString()+". See the Common parameter of the Transaction constructor to set the chain id.")}else{var n=void 0;n=e.subn(35).isEven()?35:36,o=e.subn(n).divn(2)}return this._getCommon(t,o)},o.prototype._unsignedTxImplementsEIP155=function(){return this.common.gteHardfork("spuriousDragon")},o.prototype._signedTxImplementsEIP155=function(){if(!this.isSigned())throw Error("This transaction is not signed");var e=this.common.gteHardfork("spuriousDragon"),t=this.v,o=this.common.chainIdBN().muln(2),r=t.eq(o.addn(35))||t.eq(o.addn(36));return r&&e},o}(c.BaseTransaction);t.default=f}).call(this,o("b639").Buffer)},"361f":function(e){e.exports=JSON.parse('{"name":"EIP-2929","comment":"Gas cost increases for state access opcodes","url":"https://eips.ethereum.org/EIPS/eip-2929","status":"Draft","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{"coldsload":{"v":2100,"d":"Gas cost of the first read of storage from a given location (per transaction)"},"coldaccountaccess":{"v":2600,"d":"Gas cost of the first read of a given address (per transaction)"},"warmstorageread":{"v":100,"d":"Gas cost of reading storage locations which have already loaded \'cold\'"},"sstoreCleanGasEIP2200":{"v":2900,"d":"Once per SSTORE operation from clean non-zero to something else"},"sstoreNoopGasEIP2200":{"v":100,"d":"Once per SSTORE operation if the value doesn\'t change"},"sstoreDirtyGasEIP2200":{"v":100,"d":"Once per SSTORE operation if a dirty value is changed"},"sstoreInitRefundEIP2200":{"v":19900,"d":"Once per SSTORE operation for resetting to the original zero value"},"sstoreCleanRefundEIP2200":{"v":4900,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"call":{"v":0,"d":"Base fee of the CALL opcode"},"callcode":{"v":0,"d":"Base fee of the CALLCODE opcode"},"delegatecall":{"v":0,"d":"Base fee of the DELEGATECALL opcode"},"staticcall":{"v":0,"d":"Base fee of the STATICCALL opcode"},"balance":{"v":0,"d":"Base fee of the BALANCE opcode"},"extcodesize":{"v":0,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":0,"d":"Base fee of the EXTCODECOPY opcode"},"extcodehash":{"v":0,"d":"Base fee of the EXTCODEHASH opcode"},"sload":{"v":0,"d":"Base fee of the SLOAD opcode"},"sstore":{"v":0,"d":"Base fee of the SSTORE opcode"}},"vm":{},"pow":{}}')},3971:function(e){e.exports=JSON.parse('{"name":"EIP-2315","number":2315,"comment":"Simple subroutines for the EVM","url":"https://eips.ethereum.org/EIPS/eip-2315","status":"Draft","minimumHardfork":"istanbul","gasConfig":{},"gasPrices":{"beginsub":{"v":2,"d":"Base fee of the BEGINSUB opcode"},"returnsub":{"v":5,"d":"Base fee of the RETURNSUB opcode"},"jumpsub":{"v":10,"d":"Base fee of the JUMPSUB opcode"}},"vm":{},"pow":{}}')},"3a4f":function(e){e.exports=JSON.parse('{"name":"istanbul","comment":"HF targeted for December 2019 following the Constantinople/Petersburg HF","url":"https://eips.ethereum.org/EIPS/eip-1679","status":"Draft","gasConfig":{},"gasPrices":{"blake2Round":{"v":1,"d":"Gas cost per round for the Blake2 F precompile"},"ecAdd":{"v":150,"d":"Gas costs for curve addition precompile"},"ecMul":{"v":6000,"d":"Gas costs for curve multiplication precompile"},"ecPairing":{"v":45000,"d":"Base gas costs for curve pairing precompile"},"ecPairingWord":{"v":34000,"d":"Gas costs regarding curve pairing precompile input length"},"txDataNonZero":{"v":16,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},"sstoreSentryGasEIP2200":{"v":2300,"d":"Minimum gas required to be present for an SSTORE call, not consumed"},"sstoreNoopGasEIP2200":{"v":800,"d":"Once per SSTORE operation if the value doesn\'t change"},"sstoreDirtyGasEIP2200":{"v":800,"d":"Once per SSTORE operation if a dirty value is changed"},"sstoreInitGasEIP2200":{"v":20000,"d":"Once per SSTORE operation from clean zero to non-zero"},"sstoreInitRefundEIP2200":{"v":19200,"d":"Once per SSTORE operation for resetting to the original zero value"},"sstoreCleanGasEIP2200":{"v":5000,"d":"Once per SSTORE operation from clean non-zero to something else"},"sstoreCleanRefundEIP2200":{"v":4200,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"sstoreClearRefundEIP2200":{"v":15000,"d":"Once per SSTORE operation for clearing an originally existing storage slot"},"balance":{"v":700,"d":"Base fee of the BALANCE opcode"},"extcodehash":{"v":700,"d":"Base fee of the EXTCODEHASH opcode"},"chainid":{"v":2,"d":"Base fee of the CHAINID opcode"},"selfbalance":{"v":5,"d":"Base fee of the SELFBALANCE opcode"},"sload":{"v":800,"d":"Base fee of the SLOAD opcode"}},"vm":{},"pow":{}}')},"3bef":function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EIPs=void 0,t.EIPs={1559:o("63fb"),2315:o("3971"),2537:o("7f44"),2565:o("d000"),2718:o("db43"),2929:o("361f"),2930:o("53d8"),3198:o("2469"),3529:o("eae1"),3541:o("0b1e"),3554:o("c674")}},"49fa":function(e){e.exports=JSON.parse('{"name":"byzantium","comment":"Hardfork with new precompiles, instructions and other protocol changes","url":"https://eips.ethereum.org/EIPS/eip-609","status":"Final","gasConfig":{},"gasPrices":{"modexpGquaddivisor":{"v":20,"d":"Gquaddivisor from modexp precompile for gas calculation"},"ecAdd":{"v":500,"d":"Gas costs for curve addition precompile"},"ecMul":{"v":40000,"d":"Gas costs for curve multiplication precompile"},"ecPairing":{"v":100000,"d":"Base gas costs for curve pairing precompile"},"ecPairingWord":{"v":80000,"d":"Gas costs regarding curve pairing precompile input length"},"revert":{"v":0,"d":"Base fee of the REVERT opcode"},"staticcall":{"v":700,"d":"Base fee of the STATICCALL opcode"},"returndatasize":{"v":2,"d":"Base fee of the RETURNDATASIZE opcode"},"returndatacopy":{"v":3,"d":"Base fee of the RETURNDATACOPY opcode"}},"vm":{},"pow":{"minerReward":{"v":"3000000000000000000","d":"the amount a miner get rewarded for mining a block"},"difficultyBombDelay":{"v":3000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}')},"4b262":function(e,t,o){"use strict";var r=this&&this.__values||function(e){var t="function"===typeof Symbol&&Symbol.iterator,o=t&&e[t],r=0;if(o)return o.call(e);if(e&&"number"===typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},a=this&&this.__read||function(e,t){var o="function"===typeof Symbol&&e[Symbol.iterator];if(!o)return e;var r,a,n=o.call(e),i=[];try{while((void 0===t||t-- >0)&&!(r=n.next()).done)i.push(r.value)}catch(s){a={error:s}}finally{try{r&&!r.done&&(o=n["return"])&&o.call(n)}finally{if(a)throw a.error}}return i},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.BaseTransaction=void 0;var i=n(o("67aa")),s=o("5b66"),c=o("6f3d"),d=function(){function e(e){this.activeCapabilities=[],this.DEFAULT_CHAIN="mainnet",this.DEFAULT_HARDFORK="istanbul";var t=e.nonce,o=e.gasLimit,r=e.to,a=e.value,n=e.data,i=e.v,c=e.r,d=e.s,f=e.type;this._type=new s.BN(s.toBuffer(f)).toNumber();var u=s.toBuffer(""===r?"0x":r),l=s.toBuffer(""===i?"0x":i),h=s.toBuffer(""===c?"0x":c),p=s.toBuffer(""===d?"0x":d);this.nonce=new s.BN(s.toBuffer(""===t?"0x":t)),this.gasLimit=new s.BN(s.toBuffer(""===o?"0x":o)),this.to=u.length>0?new s.Address(u):void 0,this.value=new s.BN(s.toBuffer(""===a?"0x":a)),this.data=s.toBuffer(""===n?"0x":n),this.v=l.length>0?new s.BN(l):void 0,this.r=h.length>0?new s.BN(h):void 0,this.s=p.length>0?new s.BN(p):void 0,this._validateCannotExceedMaxInteger({nonce:this.nonce,gasLimit:this.gasLimit,value:this.value,r:this.r,s:this.s})}return Object.defineProperty(e.prototype,"transactionType",{get:function(){return this.type},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"type",{get:function(){return this._type},enumerable:!1,configurable:!0}),e.prototype.supports=function(e){return this.activeCapabilities.includes(e)},e.prototype.validate=function(e){void 0===e&&(e=!1);var t=[];return this.getBaseFee().gt(this.gasLimit)&&t.push("gasLimit is too low. given "+this.gasLimit+", need at least "+this.getBaseFee()),this.isSigned()&&!this.verifySignature()&&t.push("Invalid Signature"),e?t:0===t.length},e.prototype.getBaseFee=function(){var e=this.getDataFee().addn(this.common.param("gasPrices","tx"));return this.common.gteHardfork("homestead")&&this.toCreationAddress()&&e.iaddn(this.common.param("gasPrices","txCreation")),e},e.prototype.getDataFee=function(){for(var e=this.common.param("gasPrices","txDataZero"),t=this.common.param("gasPrices","txDataNonZero"),o=0,r=0;r<this.data.length;r++)0===this.data[r]?o+=e:o+=t;return new s.BN(o)},e.prototype.toCreationAddress=function(){return void 0===this.to||0===this.to.buf.length},e.prototype.isSigned=function(){var e=this,t=e.v,o=e.r,r=e.s;return 0===this.type?!!(t&&o&&r):!(void 0===t||!o||!r)},e.prototype.verifySignature=function(){try{var e=this.getSenderPublicKey();return 0!==s.unpadBuffer(e).length}catch(t){return!1}},e.prototype.getSenderAddress=function(){return new s.Address(s.publicToAddress(this.getSenderPublicKey()))},e.prototype.sign=function(e){if(32!==e.length)throw new Error("Private key must be 32 bytes in length.");var t=!1;0===this.type&&this.common.gteHardfork("spuriousDragon")&&!this.supports(c.Capability.EIP155ReplayProtection)&&(this.activeCapabilities.push(c.Capability.EIP155ReplayProtection),t=!0);var o=this.getMessageToSign(!0),r=s.ecsign(o,e),a=r.v,n=r.r,i=r.s,d=this._processSignature(a,n,i);if(t){var f=this.activeCapabilities.indexOf(c.Capability.EIP155ReplayProtection);f>-1&&this.activeCapabilities.splice(f,1)}return d},e.prototype._getCommon=function(e,t){var o;if(t){var r=new s.BN(s.toBuffer(t));if(e){if(!e.chainIdBN().eq(r))throw new Error("The chain ID does not match the chain ID of Common");return e.copy()}return i.default.isSupportedChainId(r)?new i.default({chain:r,hardfork:this.DEFAULT_HARDFORK}):i.default.forCustomChain(this.DEFAULT_CHAIN,{name:"custom-chain",networkId:r,chainId:r},this.DEFAULT_HARDFORK)}return null!==(o=null===e||void 0===e?void 0:e.copy())&&void 0!==o?o:new i.default({chain:this.DEFAULT_CHAIN,hardfork:this.DEFAULT_HARDFORK})},e.prototype._validateCannotExceedMaxInteger=function(e,t){var o,n;void 0===t&&(t=53);try{for(var i=r(Object.entries(e)),c=i.next();!c.done;c=i.next()){var d=a(c.value,2),f=d[0],u=d[1];if(53===t){if(null===u||void 0===u?void 0:u.gt(s.MAX_INTEGER))throw new Error(f+" cannot exceed MAX_INTEGER, given "+u)}else{if(256!==t)throw new Error("unimplemented bits value");if(null===u||void 0===u?void 0:u.gte(s.TWO_POW256))throw new Error(f+" must be less than 2^256, given "+u)}}}catch(l){o={error:l}}finally{try{c&&!c.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}},e}();t.BaseTransaction=d},5043:function(e,t,o){"use strict";(function(e){var r=this&&this.__extends||function(){var e=function(t,o){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])},e(t,o)};return function(t,o){function r(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),a=this&&this.__assign||function(){return a=Object.assign||function(e){for(var t,o=1,r=arguments.length;o<r;o++)for(var a in t=arguments[o],t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},a.apply(this,arguments)},n=this&&this.__read||function(e,t){var o="function"===typeof Symbol&&e[Symbol.iterator];if(!o)return e;var r,a,n=o.call(e),i=[];try{while((void 0===t||t-- >0)&&!(r=n.next()).done)i.push(r.value)}catch(s){a={error:s}}finally{try{r&&!r.done&&(o=n["return"])&&o.call(n)}finally{if(a)throw a.error}}return i};Object.defineProperty(t,"__esModule",{value:!0});var i=o("5b66"),s=o("4b262"),c=o("6f3d"),d=o("be6a"),f=2,u=e.from(f.toString(16).padStart(2,"0"),"hex"),l=function(t){function o(e,o){var r,n;void 0===o&&(o={});var s=t.call(this,a(a({},e),{type:f}))||this;s.DEFAULT_HARDFORK="london";var u=e.chainId,l=e.accessList,h=e.maxFeePerGas,p=e.maxPriorityFeePerGas;if(s.common=s._getCommon(o.common,u),s.chainId=s.common.chainIdBN(),!s.common.isActivatedEIP(1559))throw new Error("EIP-1559 not enabled on Common");s.activeCapabilities=s.activeCapabilities.concat([1559,2718,2930]);var m=d.AccessLists.getAccessListData(null!==l&&void 0!==l?l:[]);if(s.accessList=m.accessList,s.AccessListJSON=m.AccessListJSON,d.AccessLists.verifyAccessList(s.accessList),s.maxFeePerGas=new i.BN(i.toBuffer(""===h?"0x":h)),s.maxPriorityFeePerGas=new i.BN(i.toBuffer(""===p?"0x":p)),s._validateCannotExceedMaxInteger({maxFeePerGas:s.maxFeePerGas,maxPriorityFeePerGas:s.maxPriorityFeePerGas},256),s.maxFeePerGas.lt(s.maxPriorityFeePerGas))throw new Error("maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)");if(s.v&&!s.v.eqn(0)&&!s.v.eqn(1))throw new Error("The y-parity of the transaction should either be 0 or 1");if(s.common.gteHardfork("homestead")&&(null===(r=s.s)||void 0===r?void 0:r.gt(c.N_DIV_2)))throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");var b=null===(n=null===o||void 0===o?void 0:o.freeze)||void 0===n||n;return b&&Object.freeze(s),s}return r(o,t),Object.defineProperty(o.prototype,"senderR",{get:function(){return this.r},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"senderS",{get:function(){return this.s},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"yParity",{get:function(){return this.v},enumerable:!1,configurable:!0}),o.fromTxData=function(e,t){return void 0===t&&(t={}),new o(e,t)},o.fromSerializedTx=function(e,t){if(void 0===t&&(t={}),!e.slice(0,1).equals(u))throw new Error("Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: "+f+", received: "+e.slice(0,1).toString("hex"));var r=i.rlp.decode(e.slice(1));if(!Array.isArray(r))throw new Error("Invalid serialized tx input: must be array");return o.fromValuesArray(r,t)},o.fromRlpSerializedTx=function(e,t){return void 0===t&&(t={}),o.fromSerializedTx(e,t)},o.fromValuesArray=function(e,t){if(void 0===t&&(t={}),9!==e.length&&12!==e.length)throw new Error("Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).");var r=n(e,12),a=r[0],s=r[1],c=r[2],d=r[3],f=r[4],u=r[5],l=r[6],h=r[7],p=r[8],m=r[9],b=r[10],v=r[11];return new o({chainId:new i.BN(a),nonce:s,maxPriorityFeePerGas:c,maxFeePerGas:d,gasLimit:f,to:u,value:l,data:h,accessList:null!==p&&void 0!==p?p:[],v:void 0!==m?new i.BN(m):void 0,r:b,s:v},t)},o.prototype.getDataFee=function(){var e=t.prototype.getDataFee.call(this);return e.iaddn(d.AccessLists.getDataFeeEIP2930(this.accessList,this.common)),e},o.prototype.getUpfrontCost=function(e){void 0===e&&(e=new i.BN(0));var t=i.BN.min(this.maxPriorityFeePerGas,this.maxFeePerGas.sub(e)),o=t.add(e);return this.gasLimit.mul(o).add(this.value)},o.prototype.raw=function(){return[i.bnToUnpaddedBuffer(this.chainId),i.bnToUnpaddedBuffer(this.nonce),i.bnToUnpaddedBuffer(this.maxPriorityFeePerGas),i.bnToUnpaddedBuffer(this.maxFeePerGas),i.bnToUnpaddedBuffer(this.gasLimit),void 0!==this.to?this.to.buf:e.from([]),i.bnToUnpaddedBuffer(this.value),this.data,this.accessList,void 0!==this.v?i.bnToUnpaddedBuffer(this.v):e.from([]),void 0!==this.r?i.bnToUnpaddedBuffer(this.r):e.from([]),void 0!==this.s?i.bnToUnpaddedBuffer(this.s):e.from([])]},o.prototype.serialize=function(){var t=this.raw();return e.concat([u,i.rlp.encode(t)])},o.prototype.getMessageToSign=function(t){void 0===t&&(t=!0);var o=this.raw().slice(0,9),r=e.concat([u,i.rlp.encode(o)]);return t?i.keccak256(r):r},o.prototype.hash=function(){if(!this.isSigned())throw new Error("Cannot call hash method if transaction is not signed");return i.keccak256(this.serialize())},o.prototype.getMessageToVerifySignature=function(){return this.getMessageToSign()},o.prototype.getSenderPublicKey=function(){var e;if(!this.isSigned())throw new Error("Cannot call this method if transaction is not signed");var t=this.getMessageToVerifySignature();if(this.common.gteHardfork("homestead")&&(null===(e=this.s)||void 0===e?void 0:e.gt(c.N_DIV_2)))throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");var o=this,r=o.v,a=o.r,n=o.s;try{return i.ecrecover(t,r.addn(27),i.bnToUnpaddedBuffer(a),i.bnToUnpaddedBuffer(n))}catch(s){throw new Error("Invalid Signature")}},o.prototype._processSignature=function(e,t,r){var a={common:this.common};return o.fromTxData({chainId:this.chainId,nonce:this.nonce,maxPriorityFeePerGas:this.maxPriorityFeePerGas,maxFeePerGas:this.maxFeePerGas,gasLimit:this.gasLimit,to:this.to,value:this.value,data:this.data,accessList:this.accessList,v:new i.BN(e-27),r:new i.BN(t),s:new i.BN(r)},a)},o.prototype.toJSON=function(){var e=d.AccessLists.getAccessListJSON(this.accessList);return{chainId:i.bnToHex(this.chainId),nonce:i.bnToHex(this.nonce),maxPriorityFeePerGas:i.bnToHex(this.maxPriorityFeePerGas),maxFeePerGas:i.bnToHex(this.maxFeePerGas),gasLimit:i.bnToHex(this.gasLimit),to:void 0!==this.to?this.to.toString():void 0,value:i.bnToHex(this.value),data:"0x"+this.data.toString("hex"),accessList:e,v:void 0!==this.v?i.bnToHex(this.v):void 0,r:void 0!==this.r?i.bnToHex(this.r):void 0,s:void 0!==this.s?i.bnToHex(this.s):void 0}},o}(s.BaseTransaction);t.default=l}).call(this,o("b639").Buffer)},"514c":function(e){e.exports=JSON.parse('{"name":"constantinople","comment":"Postponed hardfork including EIP-1283 (SSTORE gas metering changes)","url":"https://eips.ethereum.org/EIPS/eip-1013","status":"Final","gasConfig":{},"gasPrices":{"netSstoreNoopGas":{"v":200,"d":"Once per SSTORE operation if the value doesn\'t change"},"netSstoreInitGas":{"v":20000,"d":"Once per SSTORE operation from clean zero"},"netSstoreCleanGas":{"v":5000,"d":"Once per SSTORE operation from clean non-zero"},"netSstoreDirtyGas":{"v":200,"d":"Once per SSTORE operation from dirty"},"netSstoreClearRefund":{"v":15000,"d":"Once per SSTORE operation for clearing an originally existing storage slot"},"netSstoreResetRefund":{"v":4800,"d":"Once per SSTORE operation for resetting to the original non-zero value"},"netSstoreResetClearRefund":{"v":19800,"d":"Once per SSTORE operation for resetting to the original zero value"},"shl":{"v":3,"d":"Base fee of the SHL opcode"},"shr":{"v":3,"d":"Base fee of the SHR opcode"},"sar":{"v":3,"d":"Base fee of the SAR opcode"},"extcodehash":{"v":400,"d":"Base fee of the EXTCODEHASH opcode"},"create2":{"v":32000,"d":"Base fee of the CREATE2 opcode"}},"vm":{},"pow":{"minerReward":{"v":"2000000000000000000","d":"The amount a miner gets rewarded for mining a block"},"difficultyBombDelay":{"v":5000000,"d":"the amount of blocks to delay the difficulty bomb with"}}}')},"53d8":function(e){e.exports=JSON.parse('{"name":"EIP-2930","comment":"Optional access lists","url":"https://eips.ethereum.org/EIPS/eip-2930","status":"Draft","minimumHardfork":"istanbul","requiredEIPs":[2718,2929],"gasConfig":{},"gasPrices":{"accessListStorageKeyCost":{"v":1900,"d":"Gas cost per storage key in an Access List transaction"},"accessListAddressCost":{"v":2400,"d":"Gas cost per storage key in an Access List transaction"}},"vm":{},"pow":{}}')},"5f3a":function(e){e.exports=JSON.parse('{"name":"calaveras","chainId":123,"networkId":123,"defaultHardfork":"berlin","consensus":{"type":"poa","algorithm":"clique","clique":{"period":30,"epoch":30000}},"comment":"The Calaveras testnet chain","url":"https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/client-integration-testnets/calaveras.md","genesis":{"hash":"0xeb9233d066c275efcdfed8037f4fc082770176aefdbcb7691c71da412a5670f2","gasLimit":"0x47b760","difficulty":"0x1","nonce":"0x0000000000000000","extraData":"0x00000000000000000000000000000000000000000000000000000000000000005211cea3870c7ba7c6c44b185e62eecdb864cd8c560228ce57d31efbf64c200b2c200aacec78cf17a7148e784fe95a7a750335f8b9572ee28d72e7650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","stateRoot":"0x664c93de37eb4a72953ea42b8c046cdb64c9f0b0bca5505ade8d970d49ebdb8c","timestamp":"0x60b3877f"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0xe34c4aff"},{"name":"homestead","block":0,"forkHash":"0xe34c4aff"},{"name":"dao","block":null,"forkHash":"0xe34c4aff"},{"name":"tangerineWhistle","block":0,"forkHash":"0xe34c4aff"},{"name":"spuriousDragon","block":0,"forkHash":"0xe34c4aff"},{"name":"byzantium","block":0,"forkHash":"0xe34c4aff"},{"name":"constantinople","block":0,"forkHash":"0xe34c4aff"},{"name":"petersburg","block":0,"forkHash":"0xe34c4aff"},{"name":"istanbul","block":0,"forkHash":"0xe34c4aff"},{"name":"berlin","block":0,"forkHash":"0xe34c4aff"},{"name":"london","block":500,"forkHash":"0x173783e4"}],"bootstrapNodes":[{"ip":"3.21.156.138","port":30303,"id":"39eb08bbfad87481553c471a63ff2a4b4885fffa4ff50f1cf46744d9ad6e2f764ede146fe4df563fa9ccda1a46b9b1a88fb08135e1bf1d71b320912499da773d","location":"","comment":"Calaveras bootnode 1"},{"ip":"3.9.20.133","port":30303,"id":"9e1096aa59862a6f164994cb5cb16f5124d6c992cdbf4535ff7dea43ea1512afe5448dca9df1b7ab0726129603f1a3336b631e4d7a1a44c94daddd03241587f9","location":"","comment":"Calaveras bootnode 2"}]}')},"5fa5":function(e){e.exports=JSON.parse('{"name":"london","comment":"HF targeted for July 2021 following the Berlin fork","url":"https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md","status":"Draft","eips":[1559,3198,3529,3541]}')},"63fb":function(e){e.exports=JSON.parse('{"name":"EIP-1559","number":1559,"comment":"Fee market change for ETH 1.0 chain","url":"https://eips.ethereum.org/EIPS/eip-1559","status":"Review","minimumHardfork":"berlin","requiredEIPs":[2930],"gasConfig":{"baseFeeMaxChangeDenominator":{"v":8,"d":"Maximum base fee change denominator"},"elasticityMultiplier":{"v":2,"d":"Maximum block gas target elasticity"},"initialBaseFee":{"v":1000000000,"d":"Initial base fee on first EIP1559 block"}},"gasPrices":{},"vm":{},"pow":{}}')},"67aa":function(e,t,o){"use strict";(function(e){var r=this&&this.__extends||function(){var e=function(t,o){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])},e(t,o)};return function(t,o){function r(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),a=this&&this.__assign||function(){return a=Object.assign||function(e){for(var t,o=1,r=arguments.length;o<r;o++)for(var a in t=arguments[o],t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},a.apply(this,arguments)},n=this&&this.__values||function(e){var t="function"===typeof Symbol&&Symbol.iterator,o=t&&e[t],r=0;if(o)return o.call(e);if(e&&"number"===typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(t,"__esModule",{value:!0}),t.Hardfork=t.Chain=t.CustomChain=void 0;var i,s,c=o("faa1"),d=o("702d"),f=o("5b66"),u=o("9eec"),l=o("6c3c"),h=o("3bef");(function(e){e["PolygonMainnet"]="polygon-mainnet",e["PolygonMumbai"]="polygon-mumbai",e["ArbitrumRinkebyTestnet"]="arbitrum-rinkeby-testnet",e["xDaiChain"]="x-dai-chain"})(i=t.CustomChain||(t.CustomChain={})),function(e){e[e["Mainnet"]=1]="Mainnet",e[e["Ropsten"]=3]="Ropsten",e[e["Rinkeby"]=4]="Rinkeby",e[e["Kovan"]=42]="Kovan",e[e["Goerli"]=5]="Goerli",e[e["Calaveras"]=123]="Calaveras"}(t.Chain||(t.Chain={})),function(e){e["Chainstart"]="chainstart",e["Homestead"]="homestead",e["Dao"]="dao",e["TangerineWhistle"]="tangerineWhistle",e["SpuriousDragon"]="spuriousDragon",e["Byzantium"]="byzantium",e["Constantinople"]="constantinople",e["Petersburg"]="petersburg",e["Istanbul"]="istanbul",e["MuirGlacier"]="muirGlacier",e["Berlin"]="berlin",e["London"]="london"}(s=t.Hardfork||(t.Hardfork={}));var p=function(t){function o(e){var o,r,a=t.call(this)||this;return a._supportedHardforks=[],a._eips=[],a._customChains=null!==(o=e.customChains)&&void 0!==o?o:[],a._chainParams=a.setChain(e.chain),a.DEFAULT_HARDFORK=null!==(r=a._chainParams.defaultHardfork)&&void 0!==r?r:s.Istanbul,a._hardfork=a.DEFAULT_HARDFORK,e.supportedHardforks&&(a._supportedHardforks=e.supportedHardforks),e.hardfork&&a.setHardfork(e.hardfork),e.eips&&a.setEIPs(e.eips),a}return r(o,t),o.custom=function(e,t){var r;void 0===t&&(t={});var n=null!==(r=t.baseChain)&&void 0!==r?r:"mainnet",s=a({},o._getChainParams(n));if(s["name"]="custom-chain","string"!==typeof e)return new o(a({chain:a(a({},s),e)},t));if(e===i.PolygonMainnet)return o.custom({name:i.PolygonMainnet,chainId:137,networkId:137});if(e===i.PolygonMumbai)return o.custom({name:i.PolygonMumbai,chainId:80001,networkId:80001});if(e===i.ArbitrumRinkebyTestnet)return o.custom({name:i.ArbitrumRinkebyTestnet,chainId:421611,networkId:421611});if(e===i.xDaiChain)return o.custom({name:i.xDaiChain,chainId:100,networkId:100});throw new Error("Custom chain "+e+" not supported")},o.forCustomChain=function(e,t,r,n){var i=o._getChainParams(e);return new o({chain:a(a({},i),t),hardfork:r,supportedHardforks:n})},o.isSupportedChainId=function(e){var t=u._getInitializedChains();return Boolean(t["names"][e.toString()])},o._getChainParams=function(e,t){var o=u._getInitializedChains(t);if("number"===typeof e||f.BN.isBN(e)){if(e=e.toString(),o["names"][e]){var r=o["names"][e];return o[r]}throw new Error("Chain with ID "+e+" not supported")}if(o[e])return o[e];throw new Error("Chain with name "+e+" not supported")},o.prototype.setChain=function(e){var t,r;if("number"===typeof e||"string"===typeof e||f.BN.isBN(e))this._chainParams=o._getChainParams(e,this._customChains);else{if("object"!==typeof e)throw new Error("Wrong input format");if(this._customChains.length>0)throw new Error("Chain must be a string, number, or BN when initialized with customChains passed in");var a=["networkId","genesis","hardforks","bootstrapNodes"];try{for(var i=n(a),s=i.next();!s.done;s=i.next()){var c=s.value;if(void 0===e[c])throw new Error("Missing required chain parameter: "+c)}}catch(d){t={error:d}}finally{try{s&&!s.done&&(r=i.return)&&r.call(i)}finally{if(t)throw t.error}}this._chainParams=e}return this._chainParams},o.prototype.setHardfork=function(e){var t,o;if(!this._isSupportedHardfork(e))throw new Error("Hardfork "+e+" not set as supported in supportedHardforks");var r=!1;try{for(var a=n(l.hardforks),i=a.next();!i.done;i=a.next()){var s=i.value;s[0]===e&&(this._hardfork!==e&&(this._hardfork=e,this.emit("hardforkChanged",e)),r=!0)}}catch(c){t={error:c}}finally{try{i&&!i.done&&(o=a.return)&&o.call(a)}finally{if(t)throw t.error}}if(!r)throw new Error("Hardfork with name "+e+" not supported")},o.prototype.getHardforkByBlockNumber=function(e){var t,o;e=f.toType(e,f.TypeOutput.BN);var r=s.Chainstart;try{for(var a=n(this.hardforks()),i=a.next();!i.done;i=a.next()){var c=i.value;null!==c.block&&(e.gte(new f.BN(c.block))&&(r=c.name))}}catch(d){t={error:d}}finally{try{i&&!i.done&&(o=a.return)&&o.call(a)}finally{if(t)throw t.error}}return r},o.prototype.setHardforkByBlockNumber=function(e){e=f.toType(e,f.TypeOutput.BN);var t=this.getHardforkByBlockNumber(e);return this.setHardfork(t),t},o.prototype._chooseHardfork=function(e,t){if(void 0===t&&(t=!0),e){if(t&&!this._isSupportedHardfork(e))throw new Error("Hardfork "+e+" not set as supported in supportedHardforks")}else e=this._hardfork;return e},o.prototype._getHardfork=function(e){var t,o,r=this.hardforks();try{for(var a=n(r),i=a.next();!i.done;i=a.next()){var s=i.value;if(s["name"]===e)return s}}catch(c){t={error:c}}finally{try{i&&!i.done&&(o=a.return)&&o.call(a)}finally{if(t)throw t.error}}throw new Error("Hardfork "+e+" not defined for chain "+this.chainName())},o.prototype._isSupportedHardfork=function(e){var t,o;if(!(this._supportedHardforks.length>0))return!0;try{for(var r=n(this._supportedHardforks),a=r.next();!a.done;a=r.next()){var i=a.value;if(e===i)return!0}}catch(s){t={error:s}}finally{try{a&&!a.done&&(o=r.return)&&o.call(r)}finally{if(t)throw t.error}}return!1},o.prototype.setEIPs=function(e){var t,o,r=this;void 0===e&&(e=[]);var a=function(t){if(!(t in h.EIPs))throw new Error(t+" not supported");var o=i.gteHardfork(h.EIPs[t]["minimumHardfork"]);if(!o)throw new Error(t+" cannot be activated on hardfork "+i.hardfork()+", minimumHardfork: "+o);h.EIPs[t].requiredEIPs&&h.EIPs[t].requiredEIPs.forEach((function(o){if(!e.includes(o)&&!r.isActivatedEIP(o))throw new Error(t+" requires EIP "+o+", but is not included in the EIP list")}))},i=this;try{for(var s=n(e),c=s.next();!c.done;c=s.next()){var d=c.value;a(d)}}catch(f){t={error:f}}finally{try{c&&!c.done&&(o=s.return)&&o.call(s)}finally{if(t)throw t.error}}this._eips=e},o.prototype.param=function(e,t){var o,r,a=null;try{for(var i=n(this._eips),s=i.next();!s.done;s=i.next()){var c=s.value;if(a=this.paramByEIP(e,t,c),null!==a)return a}}catch(d){o={error:d}}finally{try{s&&!s.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return this.paramByHardfork(e,t,this._hardfork)},o.prototype.paramByHardfork=function(e,t,o){var r,a,i,s;o=this._chooseHardfork(o);var c=null;try{for(var d=n(l.hardforks),f=d.next();!f.done;f=d.next()){var u=f.value;if(u[1].hasOwnProperty("eips")){var h=u[1]["eips"];try{for(var p=(i=void 0,n(h)),m=p.next();!m.done;m=p.next()){var b=m.value,v=this.paramByEIP(e,t,b);c=null!==v?v:c}}catch(g){i={error:g}}finally{try{m&&!m.done&&(s=p.return)&&s.call(p)}finally{if(i)throw i.error}}}else{if(!u[1][e])throw new Error("Topic "+e+" not defined");void 0!==u[1][e][t]&&(c=u[1][e][t].v)}if(u[0]===o)break}}catch(y){r={error:y}}finally{try{f&&!f.done&&(a=d.return)&&a.call(d)}finally{if(r)throw r.error}}return c},o.prototype.paramByEIP=function(e,t,o){if(!(o in h.EIPs))throw new Error(o+" not supported");var r=h.EIPs[o];if(!(e in r))throw new Error("Topic "+e+" not defined");if(void 0===r[e][t])return null;var a=r[e][t].v;return a},o.prototype.paramByBlock=function(e,t,o){var r=this.activeHardforks(o),a=r[r.length-1]["name"];return this.paramByHardfork(e,t,a)},o.prototype.isActivatedEIP=function(e){var t,o;if(this.eips().includes(e))return!0;try{for(var r=n(l.hardforks),a=r.next();!a.done;a=r.next()){var i=a.value,s=i[1];if(this.gteHardfork(s["name"])&&"eips"in s&&s["eips"].includes(e))return!0}}catch(c){t={error:c}}finally{try{a&&!a.done&&(o=r.return)&&o.call(r)}finally{if(t)throw t.error}}return!1},o.prototype.hardforkIsActiveOnBlock=function(e,t,o){var r;void 0===o&&(o={}),t=f.toType(t,f.TypeOutput.BN);var a=null!==(r=o.onlySupported)&&void 0!==r&&r;e=this._chooseHardfork(e,a);var n=this.hardforkBlockBN(e);return!(!n||!t.gte(n))},o.prototype.activeOnBlock=function(e,t){return this.hardforkIsActiveOnBlock(null,e,t)},o.prototype.hardforkGteHardfork=function(e,t,o){var r,a;void 0===o&&(o={});var i,s=void 0!==o.onlyActive&&o.onlyActive;e=this._chooseHardfork(e,o.onlySupported),i=s?this.activeHardforks(null,o):this.hardforks();var c=-1,d=-1,f=0;try{for(var u=n(i),l=u.next();!l.done;l=u.next()){var h=l.value;h["name"]===e&&(c=f),h["name"]===t&&(d=f),f+=1}}catch(p){r={error:p}}finally{try{l&&!l.done&&(a=u.return)&&a.call(u)}finally{if(r)throw r.error}}return c>=d&&-1!==d},o.prototype.gteHardfork=function(e,t){return this.hardforkGteHardfork(null,e,t)},o.prototype.hardforkIsActiveOnChain=function(e,t){var o,r,a;void 0===t&&(t={});var i=null!==(a=t.onlySupported)&&void 0!==a&&a;e=this._chooseHardfork(e,i);try{for(var s=n(this.hardforks()),c=s.next();!c.done;c=s.next()){var d=c.value;if(d["name"]===e&&null!==d["block"])return!0}}catch(f){o={error:f}}finally{try{c&&!c.done&&(r=s.return)&&r.call(s)}finally{if(o)throw o.error}}return!1},o.prototype.activeHardforks=function(e,t){var o,r;void 0===t&&(t={});var a=[],i=this.hardforks();try{for(var s=n(i),c=s.next();!c.done;c=s.next()){var d=c.value;if(null!==d["block"]){if(void 0!==e&&null!==e&&e<d["block"])break;t.onlySupported&&!this._isSupportedHardfork(d["name"])||a.push(d)}}}catch(f){o={error:f}}finally{try{c&&!c.done&&(r=s.return)&&r.call(s)}finally{if(o)throw o.error}}return a},o.prototype.activeHardfork=function(e,t){void 0===t&&(t={});var o=this.activeHardforks(e,t);if(o.length>0)return o[o.length-1]["name"];throw new Error("No (supported) active hardfork found")},o.prototype.hardforkBlock=function(e){return f.toType(this.hardforkBlockBN(e),f.TypeOutput.Number)},o.prototype.hardforkBlockBN=function(e){return e=this._chooseHardfork(e,!1),new f.BN(this._getHardfork(e)["block"])},o.prototype.isHardforkBlock=function(e,t){return e=f.toType(e,f.TypeOutput.BN),t=this._chooseHardfork(t,!1),this.hardforkBlockBN(t).eq(e)},o.prototype.nextHardforkBlock=function(e){var t=this.nextHardforkBlockBN(e);return null===t?null:f.toType(t,f.TypeOutput.Number)},o.prototype.nextHardforkBlockBN=function(e){e=this._chooseHardfork(e,!1);var t=this.hardforkBlockBN(e),o=this.hardforks().reduce((function(e,o){var r=new f.BN(o.block);return r.gt(t)&&null===e?r:e}),null);return o},o.prototype.isNextHardforkBlock=function(e,t){e=f.toType(e,f.TypeOutput.BN),t=this._chooseHardfork(t,!1);var o=this.nextHardforkBlockBN(t);return null!==o&&o.eq(e)},o.prototype._calcForkHash=function(t){var o,r,a=e.from(this.genesis().hash.substr(2),"hex"),i=e.alloc(0),s=0;try{for(var c=n(this.hardforks()),u=c.next();!u.done;u=c.next()){var l=u.value,h=l.block;if(0!==h&&null!==h&&h!==s){var p=e.from(h.toString(16).padStart(16,"0"),"hex");i=e.concat([i,p])}if(l.name===t)break;s=h}}catch(v){o={error:v}}finally{try{u&&!u.done&&(r=c.return)&&r.call(c)}finally{if(o)throw o.error}}var m=e.concat([a,i]),b=f.intToBuffer(d.buf(m)>>>0).toString("hex");return"0x"+b},o.prototype.forkHash=function(e){e=this._chooseHardfork(e,!1);var t=this._getHardfork(e);if(null===t["block"]){var o="No fork hash calculation possible for non-applied or future hardfork";throw new Error(o)}return void 0!==t["forkHash"]?t["forkHash"]:this._calcForkHash(e)},o.prototype.hardforkForForkHash=function(e){var t=this.hardforks().filter((function(t){return t.forkHash===e}));return t.length>=1?t[t.length-1]:null},o.prototype.genesis=function(){return this._chainParams["genesis"]},o.prototype.hardforks=function(){return this._chainParams["hardforks"]},o.prototype.bootstrapNodes=function(){return this._chainParams["bootstrapNodes"]},o.prototype.dnsNetworks=function(){return this._chainParams["dnsNetworks"]},o.prototype.hardfork=function(){return this._hardfork},o.prototype.chainId=function(){return f.toType(this.chainIdBN(),f.TypeOutput.Number)},o.prototype.chainIdBN=function(){return new f.BN(this._chainParams["chainId"])},o.prototype.chainName=function(){return this._chainParams["name"]},o.prototype.networkId=function(){return f.toType(this.networkIdBN(),f.TypeOutput.Number)},o.prototype.networkIdBN=function(){return new f.BN(this._chainParams["networkId"])},o.prototype.eips=function(){return this._eips},o.prototype.consensusType=function(){return this._chainParams["consensus"]["type"]},o.prototype.consensusAlgorithm=function(){return this._chainParams["consensus"]["algorithm"]},o.prototype.consensusConfig=function(){return this._chainParams["consensus"][this.consensusAlgorithm()]},o.prototype.copy=function(){return Object.assign(Object.create(Object.getPrototypeOf(this)),this)},o}(c.EventEmitter);t.default=p}).call(this,o("b639").Buffer)},"6c3c":function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hardforks=void 0,t.hardforks=[["chainstart",o("c9b4")],["homestead",o("9778")],["dao",o("d54b")],["tangerineWhistle",o("d3ec")],["spuriousDragon",o("7869")],["byzantium",o("49fa")],["constantinople",o("514c")],["petersburg",o("757a")],["istanbul",o("3a4f")],["muirGlacier",o("0034")],["berlin",o("8af2")],["london",o("5fa5")]]},"6f3d":function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.N_DIV_2=t.isAccessList=t.isAccessListBuffer=t.Capability=void 0;var r=o("5b66");function a(e){if(0===e.length)return!0;var t=e[0];return!!Array.isArray(t)}function n(e){return!a(e)}(function(e){e[e["EIP155ReplayProtection"]=155]="EIP155ReplayProtection",e[e["EIP1559FeeMarket"]=1559]="EIP1559FeeMarket",e[e["EIP2718TypedTransaction"]=2718]="EIP2718TypedTransaction",e[e["EIP2930AccessLists"]=2930]="EIP2930AccessLists"})(t.Capability||(t.Capability={})),t.isAccessListBuffer=a,t.isAccessList=n,t.N_DIV_2=new r.BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16)},"757a":function(e){e.exports=JSON.parse('{"name":"petersburg","comment":"Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople","url":"https://eips.ethereum.org/EIPS/eip-1716","status":"Draft","gasConfig":{},"gasPrices":{"netSstoreNoopGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreInitGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreCleanGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreDirtyGas":{"v":null,"d":"Removed along EIP-1283"},"netSstoreClearRefund":{"v":null,"d":"Removed along EIP-1283"},"netSstoreResetRefund":{"v":null,"d":"Removed along EIP-1283"},"netSstoreResetClearRefund":{"v":null,"d":"Removed along EIP-1283"}},"vm":{},"pow":{}}')},7869:function(e){e.exports=JSON.parse('{"name":"spuriousDragon","comment":"HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit","url":"https://eips.ethereum.org/EIPS/eip-607","status":"Final","gasConfig":{},"gasPrices":{"expByte":{"v":50,"d":"Times ceil(log256(exponent)) for the EXP instruction"}},"vm":{"maxCodeSize":{"v":24576,"d":"Maximum length of contract code"}},"pow":{}}')},"7f44":function(e){e.exports=JSON.parse('{"name":"EIP-2537","number":2537,"comment":"BLS12-381 precompiles","url":"https://eips.ethereum.org/EIPS/eip-2537","status":"Draft","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{"Bls12381G1AddGas":{"v":600,"d":"Gas cost of a single BLS12-381 G1 addition precompile-call"},"Bls12381G1MulGas":{"v":12000,"d":"Gas cost of a single BLS12-381 G1 multiplication precompile-call"},"Bls12381G2AddGas":{"v":4500,"d":"Gas cost of a single BLS12-381 G2 addition precompile-call"},"Bls12381G2MulGas":{"v":55000,"d":"Gas cost of a single BLS12-381 G2 multiplication precompile-call"},"Bls12381PairingBaseGas":{"v":115000,"d":"Base gas cost of BLS12-381 pairing check"},"Bls12381PairingPerPairGas":{"v":23000,"d":"Per-pair gas cost of BLS12-381 pairing check"},"Bls12381MapG1Gas":{"v":5500,"d":"Gas cost of BLS12-381 map field element to G1"},"Bls12381MapG2Gas":{"v":110000,"d":"Gas cost of BLS12-381 map field element to G2"},"Bls12381MultiExpGasDiscount":{"v":[[1,1200],[2,888],[3,764],[4,641],[5,594],[6,547],[7,500],[8,453],[9,438],[10,423],[11,408],[12,394],[13,379],[14,364],[15,349],[16,334],[17,330],[18,326],[19,322],[20,318],[21,314],[22,310],[23,306],[24,302],[25,298],[26,294],[27,289],[28,285],[29,281],[30,277],[31,273],[32,269],[33,268],[34,266],[35,265],[36,263],[37,262],[38,260],[39,259],[40,257],[41,256],[42,254],[43,253],[44,251],[45,250],[46,248],[47,247],[48,245],[49,244],[50,242],[51,241],[52,239],[53,238],[54,236],[55,235],[56,233],[57,232],[58,231],[59,229],[60,228],[61,226],[62,225],[63,223],[64,222],[65,221],[66,220],[67,219],[68,219],[69,218],[70,217],[71,216],[72,216],[73,215],[74,214],[75,213],[76,213],[77,212],[78,211],[79,211],[80,210],[81,209],[82,208],[83,208],[84,207],[85,206],[86,205],[87,205],[88,204],[89,203],[90,202],[91,202],[92,201],[93,200],[94,199],[95,199],[96,198],[97,197],[98,196],[99,196],[100,195],[101,194],[102,193],[103,193],[104,192],[105,191],[106,191],[107,190],[108,189],[109,188],[110,188],[111,187],[112,186],[113,185],[114,185],[115,184],[116,183],[117,182],[118,182],[119,181],[120,180],[121,179],[122,179],[123,178],[124,177],[125,176],[126,176],[127,175],[128,174]],"d":"Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair"}},"vm":{},"pow":{}}')},"8af2":function(e){e.exports=JSON.parse('{"name":"berlin","comment":"HF targeted for July 2020 following the Muir Glacier HF","url":"https://eips.ethereum.org/EIPS/eip-2070","status":"Draft","eips":[2565,2929,2718,2930]}')},9778:function(e){e.exports=JSON.parse('{"name":"homestead","comment":"Homestead hardfork with protocol and network changes","url":"https://eips.ethereum.org/EIPS/eip-606","status":"Final","gasConfig":{},"gasPrices":{"delegatecall":{"v":40,"d":"Base fee of the DELEGATECALL opcode"}},"vm":{},"pow":{}}')},"9eec":function(e,t,o){"use strict";var r=this&&this.__values||function(e){var t="function"===typeof Symbol&&Symbol.iterator,o=t&&e[t],r=0;if(o)return o.call(e);if(e&&"number"===typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.chains=t._getInitializedChains=void 0;var n=a(o("c905")),i=a(o("0dc4")),s=a(o("a063")),c=a(o("fdd3")),d=a(o("b4b7")),f=a(o("5f3a"));function u(e){var t,o,a={1:"mainnet",3:"ropsten",4:"rinkeby",42:"kovan",5:"goerli",123:"calaveras"},u={mainnet:n.default,ropsten:i.default,rinkeby:s.default,kovan:c.default,goerli:d.default,calaveras:f.default};if(e)try{for(var l=r(e),h=l.next();!h.done;h=l.next()){var p=h.value,m=p.name;a[p.chainId.toString()]=m,u[m]=p}}catch(b){t={error:b}}finally{try{h&&!h.done&&(o=l.return)&&o.call(l)}finally{if(t)throw t.error}}return u["names"]=a,u}t._getInitializedChains=u,t.chains=u()},a063:function(e){e.exports=JSON.parse('{"name":"rinkeby","chainId":4,"networkId":4,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"clique","clique":{"period":15,"epoch":30000}},"comment":"PoA test network","url":"https://www.rinkeby.io","genesis":{"hash":"0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177","timestamp":"0x58ee40ba","gasLimit":4700000,"difficulty":1,"nonce":"0x0000000000000000","extraData":"0x52657370656374206d7920617574686f7269746168207e452e436172746d616e42eb768f2244c8811c63729a21a3569731535f067ffc57839b00206d1ad20c69a1981b489f772031b279182d99e65703f0076e4812653aab85fca0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","stateRoot":"0x53580584816f617295ea26c0e17641e0120cab2f0a8ffb53a866fd53aa8e8c2d"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x3b8e0691"},{"name":"homestead","block":1,"forkHash":"0x60949295"},{"name":"dao","block":null,"forkHash":null},{"name":"tangerineWhistle","block":2,"forkHash":"0x8bde40dd"},{"name":"spuriousDragon","block":3,"forkHash":"0xcb3a64bb"},{"name":"byzantium","block":1035301,"forkHash":"0x8d748b57"},{"name":"constantinople","block":3660663,"forkHash":"0xe49cab14"},{"name":"petersburg","block":4321234,"forkHash":"0xafec6b27"},{"name":"istanbul","block":5435345,"forkHash":"0xcbdb8838"},{"name":"berlin","block":8290928,"forkHash":"0x6910c8bd"},{"name":"london","block":8897988,"forkHash":"0x8e29f2f3"}],"bootstrapNodes":[{"ip":"52.169.42.101","port":30303,"id":"a24ac7c5484ef4ed0c5eb2d36620ba4e4aa13b8c84684e1b4aab0cebea2ae45cb4d375b77eab56516d34bfbd3c1a833fc51296ff084b770b94fb9028c4d25ccf","location":"","comment":"IE"},{"ip":"52.3.158.184","port":30303,"id":"343149e4feefa15d882d9fe4ac7d88f885bd05ebb735e547f12e12080a9fa07c8014ca6fd7f373123488102fe5e34111f8509cf0b7de3f5b44339c9f25e87cb8","location":"","comment":"INFURA"},{"ip":"159.89.28.211","port":30303,"id":"b6b28890b006743680c52e64e0d16db57f28124885595fa03a562be1d2bf0f3a1da297d56b13da25fb992888fd556d4c1a27b1f39d531bde7de1921c90061cc6","location":"","comment":"AKASHA"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.rinkeby.ethdisco.net"]}')},b4b7:function(e){e.exports=JSON.parse('{"name":"goerli","chainId":5,"networkId":5,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"clique","clique":{"period":15,"epoch":30000}},"comment":"Cross-client PoA test network","url":"https://github.com/goerli/testnet","genesis":{"hash":"0xbf7e331f7f7c1dd2e05159666b3bf8bc7a8a3a9eb1d518969eab529dd9b88c1a","timestamp":"0x5c51a607","gasLimit":10485760,"difficulty":1,"nonce":"0x0000000000000000","extraData":"0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","stateRoot":"0x5d6cded585e73c4e322c30c2f782a336316f17dd85a4863b9d838d2d4b8b3008"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0xa3f5ab08"},{"name":"homestead","block":0,"forkHash":"0xa3f5ab08"},{"name":"dao","block":null,"forkHash":"0xa3f5ab08"},{"name":"tangerineWhistle","block":0,"forkHash":"0xa3f5ab08"},{"name":"spuriousDragon","block":0,"forkHash":"0xa3f5ab08"},{"name":"byzantium","block":0,"forkHash":"0xa3f5ab08"},{"name":"constantinople","block":0,"forkHash":"0xa3f5ab08"},{"name":"petersburg","block":0,"forkHash":"0xa3f5ab08"},{"name":"istanbul","block":1561651,"forkHash":"0xc25efa5c"},{"name":"berlin","block":4460644,"forkHash":"0x757a1c47"},{"name":"london","block":5062605,"forkHash":"0xb8c6299d"}],"bootstrapNodes":[{"ip":"51.141.78.53","port":30303,"id":"011f758e6552d105183b1761c5e2dea0111bc20fd5f6422bc7f91e0fabbec9a6595caf6239b37feb773dddd3f87240d99d859431891e4a642cf2a0a9e6cbb98a","location":"","comment":"Upstream bootnode 1"},{"ip":"13.93.54.137","port":30303,"id":"176b9417f511d05b6b2cf3e34b756cf0a7096b3094572a8f6ef4cdcb9d1f9d00683bf0f83347eebdf3b81c3521c2332086d9592802230bf528eaf606a1d9677b","location":"","comment":"Upstream bootnode 2"},{"ip":"94.237.54.114","port":30313,"id":"46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291","location":"","comment":"Upstream bootnode 3"},{"ip":"18.218.250.66","port":30313,"id":"b5948a2d3e9d486c4d75bf32713221c2bd6cf86463302339299bd227dc2e276cd5a1c7ca4f43a0e9122fe9af884efed563bd2a1fd28661f3b5f5ad7bf1de5949","location":"","comment":"Upstream bootnode 4"},{"ip":"3.11.147.67","port":30303,"id":"a61215641fb8714a373c80edbfa0ea8878243193f57c96eeb44d0bc019ef295abd4e044fd619bfc4c59731a73fb79afe84e9ab6da0c743ceb479cbb6d263fa91","location":"","comment":"Ethereum Foundation bootnode"},{"ip":"51.15.116.226","port":30303,"id":"a869b02cec167211fb4815a82941db2e7ed2936fd90e78619c53eb17753fcf0207463e3419c264e2a1dd8786de0df7e68cf99571ab8aeb7c4e51367ef186b1dd","location":"","comment":"Goerli Initiative bootnode"},{"ip":"51.15.119.157","port":30303,"id":"807b37ee4816ecf407e9112224494b74dd5933625f655962d892f2f0f02d7fbbb3e2a94cf87a96609526f30c998fd71e93e2f53015c558ffc8b03eceaf30ee33","location":"","comment":"Goerli Initiative bootnode"},{"ip":"51.15.119.157","port":40303,"id":"a59e33ccd2b3e52d578f1fbd70c6f9babda2650f0760d6ff3b37742fdcdfdb3defba5d56d315b40c46b70198c7621e63ffa3f987389c7118634b0fefbbdfa7fd","location":"","comment":"Goerli Initiative bootnode"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net"]}')},be6a:function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AccessLists=void 0;var r=o("5b66"),a=o("6f3d"),n=function(){function e(){}return e.getAccessListData=function(e){var t,o;if(e&&a.isAccessList(e)){t=e;for(var n=[],i=0;i<e.length;i++){for(var s=e[i],c=r.toBuffer(s.address),d=[],f=0;f<s.storageKeys.length;f++)d.push(r.toBuffer(s.storageKeys[f]));n.push([c,d])}o=n}else{o=null!==e&&void 0!==e?e:[];var u=[];for(i=0;i<o.length;i++){var l=o[i],h=r.bufferToHex(l[0]),p=[];for(s=0;s<l[1].length;s++)p.push(r.bufferToHex(l[1][s]));var m={address:h,storageKeys:p};u.push(m)}t=u}return{AccessListJSON:t,accessList:o}},e.verifyAccessList=function(e){for(var t=0;t<e.length;t++){var o=e[t],r=o[0],a=o[1];if(void 0!==o[2])throw new Error("Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.");if(20!=r.length)throw new Error("Invalid EIP-2930 transaction: address length should be 20 bytes");for(var n=0;n<a.length;n++)if(32!=a[n].length)throw new Error("Invalid EIP-2930 transaction: storage slot length should be 32 bytes")}},e.getAccessListJSON=function(e){for(var t=[],o=0;o<e.length;o++){for(var a=e[o],n={address:"0x"+r.setLengthLeft(a[0],20).toString("hex"),storageKeys:[]},i=a[1],s=0;s<i.length;s++){var c=i[s];n.storageKeys.push("0x"+r.setLengthLeft(c,32).toString("hex"))}t.push(n)}return t},e.getDataFeeEIP2930=function(e,t){for(var o=t.param("gasPrices","accessListStorageKeyCost"),r=t.param("gasPrices","accessListAddressCost"),a=0,n=0;n<e.length;n++){var i=e[n],s=i[1];a+=s.length}var c=e.length;return c*r+a*o},e}();t.AccessLists=n},c674:function(e){e.exports=JSON.parse('{"name":"EIP-3554","comment":"Reduction in refunds","url":"Difficulty Bomb Delay to December 1st 2021","status":"Draft","minimumHardfork":"muirGlacier","requiredEIPs":[],"gasConfig":{},"gasPrices":{},"vm":{},"pow":{"difficultyBombDelay":{"v":9500000,"d":"the amount of blocks to delay the difficulty bomb with"}}}')},c905:function(e){e.exports=JSON.parse('{"name":"mainnet","chainId":1,"networkId":1,"defaultHardfork":"istanbul","consensus":{"type":"pow","algorithm":"ethash","ethash":{}},"comment":"The Ethereum main chain","url":"https://ethstats.net/","genesis":{"hash":"0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3","timestamp":null,"gasLimit":5000,"difficulty":17179869184,"nonce":"0x0000000000000042","extraData":"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa","stateRoot":"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0xfc64ec04"},{"name":"homestead","block":1150000,"forkHash":"0x97c2c34c"},{"name":"dao","block":1920000,"forkHash":"0x91d1f948"},{"name":"tangerineWhistle","block":2463000,"forkHash":"0x7a64da13"},{"name":"spuriousDragon","block":2675000,"forkHash":"0x3edd5b10"},{"name":"byzantium","block":4370000,"forkHash":"0xa00bc324"},{"name":"constantinople","block":7280000,"forkHash":"0x668db0af"},{"name":"petersburg","block":7280000,"forkHash":"0x668db0af"},{"name":"istanbul","block":9069000,"forkHash":"0x879d6e30"},{"name":"muirGlacier","block":9200000,"forkHash":"0xe029e991"},{"name":"berlin","block":12244000,"forkHash":"0x0eb440f6"},{"name":"london","block":12965000,"forkHash":"0xb715077d"}],"bootstrapNodes":[{"ip":"18.138.108.67","port":30303,"id":"d860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4101932a1f5011f16bb2b1bb35db20d6fe28fa0bf09636d26a87d31de9ec6203eeedb1f666","location":"ap-southeast-1-001","comment":"bootnode-aws-ap-southeast-1-001"},{"ip":"3.209.45.79","port":30303,"id":"22a8232c3abc76a16ae9d6c3b164f98775fe226f0917b0ca871128a74a8e9630b458460865bab457221f1d448dd9791d24c4e5d88786180ac185df813a68d4de","location":"us-east-1-001","comment":"bootnode-aws-us-east-1-001"},{"ip":"34.255.23.113","port":30303,"id":"ca6de62fce278f96aea6ec5a2daadb877e51651247cb96ee310a318def462913b653963c155a0ef6c7d50048bba6e6cea881130857413d9f50a621546b590758","location":"eu-west-1-001","comment":"bootnode-aws-eu-west-1-001"},{"ip":"35.158.244.151","port":30303,"id":"279944d8dcd428dffaa7436f25ca0ca43ae19e7bcf94a8fb7d1641651f92d121e972ac2e8f381414b80cc8e5555811c2ec6e1a99bb009b3f53c4c69923e11bd8","location":"eu-central-1-001","comment":"bootnode-aws-eu-central-1-001"},{"ip":"52.187.207.27","port":30303,"id":"8499da03c47d637b20eee24eec3c356c9a2e6148d6fe25ca195c7949ab8ec2c03e3556126b0d7ed644675e78c4318b08691b7b57de10e5f0d40d05b09238fa0a","location":"australiaeast-001","comment":"bootnode-azure-australiaeast-001"},{"ip":"191.234.162.198","port":30303,"id":"103858bdb88756c71f15e9b5e09b56dc1be52f0a5021d46301dbbfb7e130029cc9d0d6f73f693bc29b665770fff7da4d34f3c6379fe12721b5d7a0bcb5ca1fc1","location":"brazilsouth-001","comment":"bootnode-azure-brazilsouth-001"},{"ip":"52.231.165.108","port":30303,"id":"715171f50508aba88aecd1250af392a45a330af91d7b90701c436b618c86aaa1589c9184561907bebbb56439b8f8787bc01f49a7c77276c58c1b09822d75e8e8","location":"koreasouth-001","comment":"bootnode-azure-koreasouth-001"},{"ip":"104.42.217.25","port":30303,"id":"5d6d7cd20d6da4bb83a1d28cadb5d409b64edf314c0335df658c1a54e32c7c4a7ab7823d57c39b6a757556e68ff1df17c748b698544a55cb488b52479a92b60f","location":"westus-001","comment":"bootnode-azure-westus-001"}],"dnsNetworks":["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net"]}')},c9b4:function(e){e.exports=JSON.parse('{"name":"chainstart","comment":"Start of the Ethereum main chain","url":"","status":"","gasConfig":{"minGasLimit":{"v":5000,"d":"Minimum the gas limit may ever be"},"gasLimitBoundDivisor":{"v":1024,"d":"The bound divisor of the gas limit, used in update calculations"},"maxRefundQuotient":{"v":2,"d":"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},"gasPrices":{"base":{"v":2,"d":"Gas base cost, used e.g. for ChainID opcode (Istanbul)"},"tierStep":{"v":[0,2,3,5,8,10,20],"d":"Once per operation, for a selection of them"},"exp":{"v":10,"d":"Base fee of the EXP opcode"},"expByte":{"v":10,"d":"Times ceil(log256(exponent)) for the EXP instruction"},"sha3":{"v":30,"d":"Base fee of the SHA3 opcode"},"sha3Word":{"v":6,"d":"Once per word of the SHA3 operation\'s data"},"sload":{"v":50,"d":"Base fee of the SLOAD opcode"},"sstoreSet":{"v":20000,"d":"Once per SSTORE operation if the zeroness changes from zero"},"sstoreReset":{"v":5000,"d":"Once per SSTORE operation if the zeroness does not change from zero"},"sstoreRefund":{"v":15000,"d":"Once per SSTORE operation if the zeroness changes to zero"},"jumpdest":{"v":1,"d":"Base fee of the JUMPDEST opcode"},"log":{"v":375,"d":"Base fee of the LOG opcode"},"logData":{"v":8,"d":"Per byte in a LOG* operation\'s data"},"logTopic":{"v":375,"d":"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas"},"create":{"v":32000,"d":"Base fee of the CREATE opcode"},"call":{"v":40,"d":"Base fee of the CALL opcode"},"callStipend":{"v":2300,"d":"Free gas given at beginning of call"},"callValueTransfer":{"v":9000,"d":"Paid for CALL when the value transfor is non-zero"},"callNewAccount":{"v":25000,"d":"Paid for CALL when the destination address didn\'t exist prior"},"selfdestructRefund":{"v":24000,"d":"Refunded following a selfdestruct operation"},"memory":{"v":3,"d":"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL"},"quadCoeffDiv":{"v":512,"d":"Divisor for the quadratic particle of the memory cost equation"},"createData":{"v":200,"d":""},"tx":{"v":21000,"d":"Per transaction. NOTE: Not payable on data of calls between transactions"},"txCreation":{"v":32000,"d":"The cost of creating a contract via tx"},"txDataZero":{"v":4,"d":"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions"},"txDataNonZero":{"v":68,"d":"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},"copy":{"v":3,"d":"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added"},"ecRecover":{"v":3000,"d":""},"sha256":{"v":60,"d":""},"sha256Word":{"v":12,"d":""},"ripemd160":{"v":600,"d":""},"ripemd160Word":{"v":120,"d":""},"identity":{"v":15,"d":""},"identityWord":{"v":3,"d":""},"stop":{"v":0,"d":"Base fee of the STOP opcode"},"add":{"v":3,"d":"Base fee of the ADD opcode"},"mul":{"v":5,"d":"Base fee of the MUL opcode"},"sub":{"v":3,"d":"Base fee of the SUB opcode"},"div":{"v":5,"d":"Base fee of the DIV opcode"},"sdiv":{"v":5,"d":"Base fee of the SDIV opcode"},"mod":{"v":5,"d":"Base fee of the MOD opcode"},"smod":{"v":5,"d":"Base fee of the SMOD opcode"},"addmod":{"v":8,"d":"Base fee of the ADDMOD opcode"},"mulmod":{"v":8,"d":"Base fee of the MULMOD opcode"},"signextend":{"v":5,"d":"Base fee of the SIGNEXTEND opcode"},"lt":{"v":3,"d":"Base fee of the LT opcode"},"gt":{"v":3,"d":"Base fee of the GT opcode"},"slt":{"v":3,"d":"Base fee of the SLT opcode"},"sgt":{"v":3,"d":"Base fee of the SGT opcode"},"eq":{"v":3,"d":"Base fee of the EQ opcode"},"iszero":{"v":3,"d":"Base fee of the ISZERO opcode"},"and":{"v":3,"d":"Base fee of the AND opcode"},"or":{"v":3,"d":"Base fee of the OR opcode"},"xor":{"v":3,"d":"Base fee of the XOR opcode"},"not":{"v":3,"d":"Base fee of the NOT opcode"},"byte":{"v":3,"d":"Base fee of the BYTE opcode"},"address":{"v":2,"d":"Base fee of the ADDRESS opcode"},"balance":{"v":20,"d":"Base fee of the BALANCE opcode"},"origin":{"v":2,"d":"Base fee of the ORIGIN opcode"},"caller":{"v":2,"d":"Base fee of the CALLER opcode"},"callvalue":{"v":2,"d":"Base fee of the CALLVALUE opcode"},"calldataload":{"v":3,"d":"Base fee of the CALLDATALOAD opcode"},"calldatasize":{"v":2,"d":"Base fee of the CALLDATASIZE opcode"},"calldatacopy":{"v":3,"d":"Base fee of the CALLDATACOPY opcode"},"codesize":{"v":2,"d":"Base fee of the CODESIZE opcode"},"codecopy":{"v":3,"d":"Base fee of the CODECOPY opcode"},"gasprice":{"v":2,"d":"Base fee of the GASPRICE opcode"},"extcodesize":{"v":20,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":20,"d":"Base fee of the EXTCODECOPY opcode"},"blockhash":{"v":20,"d":"Base fee of the BLOCKHASH opcode"},"coinbase":{"v":2,"d":"Base fee of the COINBASE opcode"},"timestamp":{"v":2,"d":"Base fee of the TIMESTAMP opcode"},"number":{"v":2,"d":"Base fee of the NUMBER opcode"},"difficulty":{"v":2,"d":"Base fee of the DIFFICULTY opcode"},"gaslimit":{"v":2,"d":"Base fee of the GASLIMIT opcode"},"pop":{"v":2,"d":"Base fee of the POP opcode"},"mload":{"v":3,"d":"Base fee of the MLOAD opcode"},"mstore":{"v":3,"d":"Base fee of the MSTORE opcode"},"mstore8":{"v":3,"d":"Base fee of the MSTORE8 opcode"},"sstore":{"v":0,"d":"Base fee of the SSTORE opcode"},"jump":{"v":8,"d":"Base fee of the JUMP opcode"},"jumpi":{"v":10,"d":"Base fee of the JUMPI opcode"},"pc":{"v":2,"d":"Base fee of the PC opcode"},"msize":{"v":2,"d":"Base fee of the MSIZE opcode"},"gas":{"v":2,"d":"Base fee of the GAS opcode"},"push":{"v":3,"d":"Base fee of the PUSH opcode"},"dup":{"v":3,"d":"Base fee of the DUP opcode"},"swap":{"v":3,"d":"Base fee of the SWAP opcode"},"callcode":{"v":40,"d":"Base fee of the CALLCODE opcode"},"return":{"v":0,"d":"Base fee of the RETURN opcode"},"invalid":{"v":0,"d":"Base fee of the INVALID opcode"},"selfdestruct":{"v":0,"d":"Base fee of the SELFDESTRUCT opcode"}},"vm":{"stackLimit":{"v":1024,"d":"Maximum size of VM stack allowed"},"callCreateDepth":{"v":1024,"d":"Maximum depth of call/create stack"},"maxExtraDataSize":{"v":32,"d":"Maximum size extra data may be after Genesis"}},"pow":{"minimumDifficulty":{"v":131072,"d":"The minimum that the difficulty may ever be"},"difficultyBoundDivisor":{"v":2048,"d":"The bound divisor of the difficulty, used in the update calculations"},"durationLimit":{"v":13,"d":"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not"},"epochDuration":{"v":30000,"d":"Duration between proof-of-work epochs"},"timebombPeriod":{"v":100000,"d":"Exponential difficulty timebomb period"},"minerReward":{"v":"5000000000000000000","d":"the amount a miner get rewarded for mining a block"},"difficultyBombDelay":{"v":0,"d":"the amount of blocks to delay the difficulty bomb with"}}}')},ced0:function(e,t,o){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,o,r){void 0===r&&(r=o),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[o]}})}:function(e,t,o,r){void 0===r&&(r=o),e[r]=t[o]}),a=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||t.hasOwnProperty(o)||r(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0});var n=o("24b7");Object.defineProperty(t,"Transaction",{enumerable:!0,get:function(){return n.default}});var i=o("1355");Object.defineProperty(t,"AccessListEIP2930Transaction",{enumerable:!0,get:function(){return i.default}});var s=o("f48f");Object.defineProperty(t,"TransactionFactory",{enumerable:!0,get:function(){return s.default}});var c=o("5043");Object.defineProperty(t,"FeeMarketEIP1559Transaction",{enumerable:!0,get:function(){return c.default}}),a(o("6f3d"),t)},d000:function(e){e.exports=JSON.parse('{"name":"EIP-2565","number":2565,"comment":"ModExp gas cost","url":"https://eips.ethereum.org/EIPS/eip-2565","status":"Last call","minimumHardfork":"byzantium","gasConfig":{},"gasPrices":{"modexpGquaddivisor":{"v":3,"d":"Gquaddivisor from modexp precompile for gas calculation"}},"vm":{},"pow":{}}')},d3ec:function(e){e.exports=JSON.parse('{"name":"tangerineWhistle","comment":"Hardfork with gas cost changes for IO-heavy operations","url":"https://eips.ethereum.org/EIPS/eip-608","status":"Final","gasConfig":{},"gasPrices":{"sload":{"v":200,"d":"Once per SLOAD operation"},"call":{"v":700,"d":"Once per CALL operation & message call transaction"},"extcodesize":{"v":700,"d":"Base fee of the EXTCODESIZE opcode"},"extcodecopy":{"v":700,"d":"Base fee of the EXTCODECOPY opcode"},"balance":{"v":400,"d":"Base fee of the BALANCE opcode"},"delegatecall":{"v":700,"d":"Base fee of the DELEGATECALL opcode"},"callcode":{"v":700,"d":"Base fee of the CALLCODE opcode"},"selfdestruct":{"v":5000,"d":"Base fee of the SELFDESTRUCT opcode"}},"vm":{},"pow":{}}')},d54b:function(e){e.exports=JSON.parse('{"name":"dao","comment":"DAO rescue hardfork","url":"https://eips.ethereum.org/EIPS/eip-779","status":"Final","gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}')},db43:function(e){e.exports=JSON.parse('{"name":"EIP-2718","comment":"Typed Transaction Envelope","url":"https://eips.ethereum.org/EIPS/eip-2718","status":"Draft","minimumHardfork":"chainstart","gasConfig":{},"gasPrices":{},"vm":{},"pow":{}}')},eae1:function(e){e.exports=JSON.parse('{"name":"EIP-3529","comment":"Reduction in refunds","url":"https://eips.ethereum.org/EIPS/eip-3529","status":"Draft","minimumHardfork":"berlin","requiredEIPs":[2929],"gasConfig":{"maxRefundQuotient":{"v":5,"d":"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},"gasPrices":{"selfdestructRefund":{"v":0,"d":"Refunded following a selfdestruct operation"},"sstoreClearRefundEIP2200":{"v":4800,"d":"Once per SSTORE operation for clearing an originally existing storage slot"}},"vm":{},"pow":{}}')},f48f:function(e,t,o){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var r=o("5b66"),a=o("ced0"),n=function(){function t(){}return t.fromTxData=function(e,t){if(void 0===t&&(t={}),"type"in e&&void 0!==e.type){var o=new r.BN(r.toBuffer(e.type)).toNumber();if(0===o)return a.Transaction.fromTxData(e,t);if(1===o)return a.AccessListEIP2930Transaction.fromTxData(e,t);if(2===o)return a.FeeMarketEIP1559Transaction.fromTxData(e,t);throw new Error("Tx instantiation with type "+o+" not supported")}return a.Transaction.fromTxData(e,t)},t.fromSerializedData=function(e,t){if(void 0===t&&(t={}),e[0]<=127){var o=void 0;switch(e[0]){case 1:o=2930;break;case 2:o=1559;break;default:throw new Error("TypedTransaction with ID "+e[0]+" unknown")}return 1559===o?a.FeeMarketEIP1559Transaction.fromSerializedTx(e,t):a.AccessListEIP2930Transaction.fromSerializedTx(e,t)}return a.Transaction.fromSerializedTx(e,t)},t.fromBlockBodyData=function(t,o){if(void 0===o&&(o={}),e.isBuffer(t))return this.fromSerializedData(t,o);if(Array.isArray(t))return a.Transaction.fromValuesArray(t,o);throw new Error("Cannot decode transaction: unknown type input")},t.getTransactionClass=function(e,t){void 0===e&&(e=0);var o=0==e||e>=128&&e<=255;if(o)return a.Transaction;switch(e){case 1:return a.AccessListEIP2930Transaction;case 2:return a.FeeMarketEIP1559Transaction;default:throw new Error("TypedTransaction with ID "+e+" unknown")}},t}();t.default=n}).call(this,o("b639").Buffer)},fdd3:function(e){e.exports=JSON.parse('{"name":"kovan","chainId":42,"networkId":42,"defaultHardfork":"istanbul","consensus":{"type":"poa","algorithm":"aura","aura":{}},"comment":"Parity PoA test network","url":"https://kovan-testnet.github.io/website/","genesis":{"hash":"0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9","timestamp":null,"gasLimit":6000000,"difficulty":131072,"nonce":"0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","extraData":"0x","stateRoot":"0x2480155b48a1cea17d67dbfdfaafe821c1d19cdd478c5358e8ec56dec24502b2"},"hardforks":[{"name":"chainstart","block":0,"forkHash":"0x010ffe56"},{"name":"homestead","block":0,"forkHash":"0x010ffe56"},{"name":"dao","block":null,"forkHash":"0x010ffe56"},{"name":"tangerineWhistle","block":0,"forkHash":"0x010ffe56"},{"name":"spuriousDragon","block":0,"forkHash":"0x010ffe56"},{"name":"byzantium","block":5067000,"forkHash":"0x7f83c620"},{"name":"constantinople","block":9200000,"forkHash":"0xa94e3dc4"},{"name":"petersburg","block":10255201,"forkHash":"0x186874aa"},{"name":"istanbul","block":14111141,"forkHash":"0x7f6599a6"},{"name":"berlin","block":null,"forkHash":null},{"name":"london","block":null,"forkHash":null}],"bootstrapNodes":[{"ip":"116.203.116.241","port":30303,"id":"16898006ba2cd4fa8bf9a3dfe32684c178fa861df144bfc21fe800dc4838a03e342056951fa9fd533dcb0be1219e306106442ff2cf1f7e9f8faa5f2fc1a3aa45","location":"","comment":"1"},{"ip":"3.217.96.11","port":30303,"id":"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0","location":"","comment":"2"},{"ip":"108.61.170.124","port":30303,"id":"740e1c8ea64e71762c71a463a04e2046070a0c9394fcab5891d41301dc473c0cff00ebab5a9bc87fbcb610ab98ac18225ff897bc8b7b38def5975d5ceb0a7d7c","location":"","comment":"3"},{"ip":"157.230.31.163","port":30303,"id":"2909846f78c37510cc0e306f185323b83bb2209e5ff4fdd279d93c60e3f365e3c6e62ad1d2133ff11f9fd6d23ad9c3dad73bb974d53a22f7d1ac5b7dea79d0b0","location":"","comment":"4"}]}')}}]);